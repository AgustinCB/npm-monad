{"version":3,"sources":["main.js"],"names":["Term","constructor","value","Div","term1","term2","t","evaluate","val","Error","Number","unit","then","a","b","consResult","is","divResult","raise","errorResult","error"],"mappings":"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","file":"main.js","sourcesContent":["import test from 'ava'\n\nimport {default as Monad, MonadicException} from '../lib/main'\n\nclass Term {\n  constructor(value) {\n    this.value = value\n  }\n}\n\nclass Div {\n  constructor(term1, term2) {\n    this.term1 = term1\n    this.term2 = term2\n  }\n}\n\ntest('basic evaluation', t => {\n  const evaluate = (val) => {\n    if (val.constructor !== Term) throw new Error('Unexpected argument')\n\n    if (val.value.constructor === Number) return Monad.unit(val.value)\n\n    if (val.value.constructor === Div) {\n      return evaluate(val.value.term1).then(a =>\n        evaluate(val.value.term2).then(b =>\n          Monad.unit(a/b)\n        )\n      )\n    }\n  }\n\n  const consResult = evaluate(new Term(42))\n  t.is(consResult.constructor, Monad)\n  t.is(consResult.value, 42)\n\n  const divResult = evaluate(new Term(new Div(new Term(new Div(new Term(1972), new Term(2))), new Term(23))))\n  t.is(consResult.constructor, Monad)\n  t.is(consResult.value, 42)\n})\n\ntest('basic evaluation with exception', t => {\n  const evaluate = (val) => {\n    if (val.constructor !== Term) throw new Error('Unexpected argument')\n\n    if (val.value.constructor === Number) return MonadicException.unit(val.value)\n\n    if (val.value.constructor === Div) {\n      return evaluate(val.value.term1).then(a =>\n        evaluate(val.value.term2).then(b =>\n          (b === 0)\n          ? MonadicException.raise('Division by zero')\n          : MonadicException.unit(a/b)\n        )\n      )\n    }\n  }\n\n  const consResult = evaluate(new Term(42))\n  t.is(consResult.constructor, MonadicException)\n  t.is(consResult.value.value, 42)\n\n  const divResult = evaluate(new Term(new Div(new Term(new Div(new Term(1972), new Term(2))), new Term(23))))\n  t.is(consResult.constructor, MonadicException)\n  t.is(consResult.value.value, 42)\n\n  const errorResult = evaluate(new Term(new Div(new Term(10), new Term(0))))\n  t.is(errorResult.constructor, MonadicException)\n  t.is(errorResult.value.value, null)\n  t.is(errorResult.value.error, 'Division by zero')\n})\n"]}